- stage: ImportToAPIM
  displayName: 'Import Product & Inventory APIs to APIM'
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: ImportAPI
    displayName: 'Import Swagger to APIM'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: 'Import APIs'
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing

          echo "Waiting for ProductService External IP..."
          RETRIES=10
          EXTERNAL_IP=""
          while [ -z "$EXTERNAL_IP" ] && [ $RETRIES -gt 0 ]; do
            EXTERNAL_IP=$(kubectl get svc productservice -n $(namespace) -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -z "$EXTERNAL_IP" ]; then
              sleep 15
              RETRIES=$((RETRIES - 1))
            fi
          done

          if [ -z "$EXTERNAL_IP" ]; then
            echo "Could not fetch ProductService IP."
            exit 1
          fi

          echo "Importing ProductService API to APIM..."
          az apim api import \
            --resource-group $(apimResourceGroup) \
            --service-name $(apimInstance) \
            --api-id productservice-api \
            --path product \
            --display-name "ProductService API" \
            --specification-url "http://$EXTERNAL_IP/swagger/v1/swagger.json" \
            --specification-format OpenApi

          echo "Updating ProductService API backend URL..."
          az apim api update \
            --resource-group $(apimResourceGroup) \
            --service-name $(apimInstance) \
            --api-id productservice-api \
            --set serviceUrl=http://$EXTERNAL_IP

          echo "Waiting for InventoryService External IP..."
          INVENTORY_IP=""
          RETRIES=10
          while [ -z "$INVENTORY_IP" ] && [ $RETRIES -gt 0 ]; do
            INVENTORY_IP=$(kubectl get svc inventoryservice -n $(namespace) -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            if [ -z "$INVENTORY_IP" ]; then
              sleep 15
              RETRIES=$((RETRIES - 1))
            fi
          done

          if [ -z "$INVENTORY_IP" ]; then
            echo "Could not fetch InventoryService IP."
            exit 1
          fi

          echo "Importing InventoryService API to APIM..."
          az apim api import \
            --resource-group $(apimResourceGroup) \
            --service-name $(apimInstance) \
            --api-id inventoryservice-api \
            --path inventory \
            --display-name "InventoryService API" \
            --specification-url "http://$INVENTORY_IP/swagger/v1/swagger.json" \
            --specification-format OpenApi

          echo "Updating InventoryService API backend URL..."
          az apim api update \
            --resource-group $(apimResourceGroup) \
            --service-name $(apimInstance) \
            --api-id inventoryservice-api \
            --set serviceUrl=http://$INVENTORY_IP
