trigger: none

variables:
  dockerRegistryServiceConnection: 'MyACRConnection'
  imageRepository: 'productservice'
  imageRepositoryInventory: 'inventoryservice'
  containerRegistry: 'bookstoreaure.azurecr.io'
  dockerfilePath: 'BookStore.ProductSCA/BookStore.ProductService/src/BookStore.ProductService.API/Dockerfile'
  dockerfilePathInventory: 'BookStore.ProductSCA/BookStore.InventoryService/InventoryService.API/Dockerfile'
  buildContext: 'BookStore.ProductSCA/BookStore.ProductService/src'
  buildContextInventory: 'BookStore.ProductSCA/BookStore.InventoryService'
  tag: '$(Build.BuildId)'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: BuildAndPush
  displayName: 'Build and Push Docker Image to ACR'
  jobs:
  - job: Build
    displayName: 'Docker Build and Push'
    steps:
    - task: Docker@2
      displayName: 'Build and Push Image Product'
      inputs:
        command: buildAndPush
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(buildContext)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: 'Build and Push Image Inventory'
      inputs:
        command: buildAndPush
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepositoryInventory)
        dockerfile: $(dockerfilePathInventory)
        buildContext: $(buildContextInventory)
        tags: |
          $(tag)

    - task: ArchiveFiles@2
      displayName: 'Zip Azure Function Proxy'
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/BookStore.FunctionProxy'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Pipeline.Workspace)/drop/azure-function-proxy.zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Function Proxy ZIP'
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/drop/azure-function-proxy.zip'
        ArtifactName: 'functionproxyzip'
        publishLocation: 'Container'

