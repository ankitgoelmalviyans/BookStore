trigger: none

variables:
- group: BookStoreSecrets
- name: azureSubscription
  value: 'AzureServiceConnectionName'
- name: resourceGroup
  value: 'BookStoreRG'
- name: location
  value: 'East US'
- name: aksClusterName
  value: 'bookstore-aks'
- name: aksNodeCount
  value: '2'
- name: aksNodeSize
  value: 'Standard_B2s'
- name: containerRegistryName
  value: 'bookstoreaure'  # NOTE: this is just the ACR name (not .azurecr.io)
- name: serviceBusNamespace
  value: 'bookstore-servicebus'
- name: topicName
  value: 'product-events'
- name: subscriptionName
  value: 'inventory-subscription'
- name: apimServiceName
  value: 'bookstore-apim-new-1'

stages:
- stage: Provision
  displayName: 'Provision Azure Resources'
  jobs:
  - job: CreateResources
    displayName: 'Create Resources'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Creating resource group if not exists..."
          az group create --name "$(resourceGroup)" --location "$(location)"

          echo "Registering Microsoft.ContainerService if not already..."
          az provider register --namespace Microsoft.ContainerService

          echo "Waiting for Microsoft.ContainerService registration to complete..."
          for i in {1..10}; do
            state=$(az provider show --namespace Microsoft.ContainerService --query "registrationState" -o tsv)
            echo "Current registration state: $state"
            if [ "$state" == "Registered" ]; then
              break
            fi
            echo "Waiting 10s for registration..."
            sleep 10
          done

          echo "Creating AKS cluster if not exists..."
          az aks show --name "$(aksClusterName)" --resource-group "$(resourceGroup)" 2>/dev/null || \
          az aks create --name "$(aksClusterName)" \
                        --resource-group "$(resourceGroup)" \
                        --location "$(location)" \
                        --node-count "$(aksNodeCount)" \
                        --node-vm-size "$(aksNodeSize)" \
                        --generate-ssh-keys

          echo "Attaching ACR to AKS..."
          az aks update \
            --name "$(aksClusterName)" \
            --resource-group "$(resourceGroup)" \
            --attach-acr "$(containerRegistryName)"

          echo "Creating Service Bus namespace, topic, and subscription..."
          az servicebus namespace create --name "$(serviceBusNamespace)" --resource-group "$(resourceGroup)" --location "$(location)" || true
          az servicebus topic create --name "$(topicName)" --namespace-name "$(serviceBusNamespace)" --resource-group "$(resourceGroup)" || true
          az servicebus topic subscription create --name "$(subscriptionName)" --topic-name "$(topicName)" --namespace-name "$(serviceBusNamespace)" --resource-group "$(resourceGroup)" || true

          echo "Creating APIM instance if not exists..."
          az apim show --resource-group "$(resourceGroup)" --name "$(apimServiceName)" || \
          az apim create --name "$(apimServiceName)" \
                         --resource-group "$(resourceGroup)" \
                         --location "$(location)" \
                         --publisher-email "admin@bookstore.com" \
                         --publisher-name "BookStore Admin" \
                         --sku-name Developer
