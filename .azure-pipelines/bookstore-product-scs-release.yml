trigger:
  branches:
    include:
      - main

variables:
  azureSubscription: 'AzureServiceConnectionName'  # Update with your service connection name
  resourceGroup: 'BookStoreRG'
  productServiceApp: 'bookstore-product-service'
  inventoryServiceApp: 'bookstore-inventory-service'
  productUiApp: 'bookstore-product-ui'

stages:
- stage: Release
  displayName: 'Deploy to Azure App Services'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployProductService
    displayName: 'Deploy ProductService'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebApp@1
      displayName: 'Deploy ProductService to Azure'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: '$(productServiceApp)'
        package: '$(Pipeline.Workspace)/drop/ProductService/**.zip'

  - job: DeployInventoryService
    displayName: 'Deploy InventoryService'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureWebApp@1
      displayName: 'Deploy InventoryService to Azure'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appName: '$(inventoryServiceApp)'
        package: '$(Pipeline.Workspace)/drop/InventoryService/**.zip'

  - job: DeployAngularApp
    displayName: 'Deploy Angular UI to Azure'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureStaticWebApp@0
      displayName: 'Deploy Angular UI'
      inputs:
        azureSubscription: '$(azureSubscription)'
        app_name: '$(productUiApp)'
        package: '$(Pipeline.Workspace)/drop/product-ui' # Make sure your Angular output is placed here
